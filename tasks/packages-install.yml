---

- name: "packages-install: Get list of packages for {{ item.list }}"
  set_fact:
    local_pkg_list: "{{ lookup('vars', 'pkg_dict_' ~ ansible_architecture)|json_query(query) }}"
  vars:
    query: "[?pkglist=='{{ item.list }}'].packages"

- name: "packages-install: Install packages"
  pkgng:
    name: "{{ local_pkg }}"
    autoremove: "{{ fp_pkg_autoremove|default(omit) }}"
    cached: "{{ fp_pkg_cached|default(omit) }}"
    chroot: "{{ fp_pkg_chroot|default(omit) }}"
    jail: "{{ fp_pkg_jail|default(omit) }}"
    pkgsite: "{{ fp_pkg_pkgsite|default(omit) }}"
    rootdir: "{{ fp_pkg_rootdir|default(omit) }}"
    state: "{{ fp_pkg_state|default(omit) }}"
  loop: "{{ local_pkg_list }}"
  loop_control:
    loop_var: local_pkg
    label: "{{ local_pkg }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when: freebsd_install_method|lower == "packages"

- name: "packages-install: Install ports"
  portinstall:
    name: "{{ local_pkg }}"
    use_packages: "{{ freebsd_use_packages }}"
  loop: "{{ local_pkg_list }}"
  loop_control:
    loop_var: local_pkg
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when: freebsd_install_method|lower == "ports"

# EOF
...
