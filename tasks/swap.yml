---

- name: "swap: Debug"
  vars:
    msg: |
      fp_swap_enable [{{ fp_swap_enable }}]
      fp_swap_file [{{ fp_swap_file|default("UNDEFINED") }}]
      fp_swap_md [{{ fp_swap_md|default("UNDEFINED") }}]
      fp_swap_size [{{ fp_swap_size|default("UNDEFINED") }}]
      fp_swap_stsize [{{ fp_swap_stsize|default("UNDEFINED") }}]
  debug:
    msg: "{{ msg.split('\n')[:-1] }}"
  when: fp_swap_debug|bool
  tags: [fp_swap_debug, always]

- name: "swap: Enable swap and add entry in /etc/fstab"
  block:
    - name: "swap: Create swapfile {{ fp_swap_file }}"
      shell: sh -c 'if [ ! -e {{ fp_swap_file }} ]; then printf "create"; fi'
      register: command_result
      changed_when: command_result.stdout == "create"
      notify: create swap
    - name: "swap: Create swap entry in /etc/fstab"
      lineinfile:
        path: /etc/fstab
        regexp: '^\s*{{ fp_swap_md }}\s+(.*)$'
        line: "{{ fp_swap_md }} none swap sw,file={{ fp_swap_file }},late 0 0"
        backup: "{{ fp_backup }}"
      notify: mount swap
#  mount:
#    name="none"
#    src="{{ fp_swap_md }}"
#    fstype="swap"
#    opts="sw,file={{ fp_swap_file }},late"
#    passno="0"
#    dump="0"
#    state="present"
#    backup yes
# Note: mount module fstype swap does not work with FreeBSD as
# expected. Instead of adding the src all swap mount points present in
# the fstab are replaced with src.
    - name: "swap: Change swapfile {{ fp_swap_file }}"
      shell: >
        sh -c 'if [ -e {{ fp_swap_file }} ] &&
        [ "`stat -f %z {{ fp_swap_file }}`" -ne "{{ fp_swap_stsize }}" ]; then
        printf "change";
        fi'
      register: command_result
      changed_when: command_result.stdout == "change"
      notify: change and mount swap
  when: fp_swap_enable|bool

- name: "swap: Disable swap and remove entry from /etc/fstab"
  lineinfile:
    path: /etc/fstab
    regexp: '^\s*{{ fp_swap_md }}\s+(.*)$'
    state: absent
    backup: "{{ fp_backup }}"
  notify: umount and delete swap
  when:
    - not fp_swap_enable|bool
    - fp_swap_md is defined

# EOF
...
