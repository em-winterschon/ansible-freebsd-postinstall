# {{ ansible_managed }}
# $FreeBSD$

# Trusted keyprint.  Changing this is a Bad Idea unless you've received
# a PGP-signed email from <security-officer@FreeBSD.org> telling you to
# change it and explaining why.
KeyPrint 800651ef4b4c71c27e60786d7b487188970f4b4169cc055784e21eb71d410cc5

{% if fp_freebsd_update_servername is defined %}
# Server or server pool from which to fetch updates.  You can change
# this to point at a specific server if you want, but in most cases
# using a "nearby" server won't provide a measurable improvement in
# performance.
ServerName {{ fp_freebsd_update_servername }}

{% endif %}
{% if fp_freebsd_update_components is defined %}
# Components of the base system which should be kept updated.
Components {{ fp_freebsd_update_components | join(' ') }}

# Example for updating the userland and the kernel source code only:
# Components src/base src/sys world

{% endif %}
{% if fp_freebsd_update_ignorepaths is defined %}
# Paths which start with anything matching an entry in an IgnorePaths
# statement will be ignored.
IgnorePaths

{% endif %}
{% if fp_freebsd_update_idsignorepaths is defined %}
# Paths which start with anything matching an entry in an IDSIgnorePaths
# statement will be ignored by "freebsd-update IDS".
{% for item in fp_freebsd_update_idsignorepaths %}
IDSIgnorePaths {{ item }}
{% endfor %}

{% endif %}
{% if fp_freebsd_update_updateifunmodified is defined %}
# Paths which start with anything matching an entry in an UpdateIfUnmodified
# statement will only be updated if the contents of the file have not been
# modified by the user (unless changes are merged; see below).
UpdateIfUnmodified {{ fp_freebsd_update_updateifunmodified | join(' ') }}

{% endif %}
{% if fp_freebsd_update_mergechanges is defined %}
# When upgrading to a new FreeBSD release, files which match MergeChanges
# will have any local changes merged into the version from the new release.
MergeChanges {{ fp_freebsd_update_mergechanges | join(' ') }}

{% endif %}
### Default configuration options:

{% if fp_freebsd_update_workdir is defined %}
# Directory in which to store downloaded updates and temporary
# files used by FreeBSD Update.
WorkDir {{ fp_freebsd_update_workdir }}

{% endif %}
{% if fp_freebsd_update_mailto is defined %}
# Destination to send output of "freebsd-update cron" if an error
# occurs or updates have been downloaded.
MailTo {{ fp_freebsd_update_mailto }}

{% endif %}
{% if fp_freebsd_update_allowadd is defined %}
# Is FreeBSD Update allowed to create new files?
AllowAdd {{ fp_freebsd_update_allowadd }}

{% endif %}
{% if fp_freebsd_update_allowdelete is defined %}
# Is FreeBSD Update allowed to delete files?
AllowDelete {{ fp_freebsd_update_allowdelete }}

{% endif %}
{% if fp_freebsd_update_keepmodifiedmetadata is defined %}
# If the user has modified file ownership, permissions, or flags, should
# FreeBSD Update retain this modified metadata when installing a new version
# of that file?
KeepModifiedMetadata {{ fp_freebsd_update_keepmodifiedmetadata }}

{% endif %}
{% if fp_freebsd_update_strictcomponents is defined %}
# When upgrading between releases, should the list of Components be
# read strictly (StrictComponents yes) or merely as a list of components
# which *might* be installed of which FreeBSD Update should figure out
# which actually are installed and upgrade those (StrictComponents no)?
StrictComponents {{ fp_freebsd_update_strictcomponents }}

{% endif %}
{% if fp_freebsd_update_backupkernel is defined %}
# When installing a new kernel perform a backup of the old one first
# so it is possible to boot the old kernel in case of problems.
BackupKernel {{ fp_freebsd_update_backupkernel }}

{% endif %}
{% if fp_freebsd_update_backupkerneldir is defined %}
# If BackupKernel is enabled, the backup kernel is saved to this
# directory.
BackupKernelDir {{ fp_freebsd_update_backupkerneldir }}

{% endif %}
{% if fp_freebsd_update_backupkernelsymbolfiles is defined %}
# When backing up a kernel also back up debug symbol files?
BackupKernelSymbolFiles {{ fp_freebsd_update_backupkernelsymbolfiles }}

{% endif %}
{% if fp_freebsd_update_createbootenv is defined %}
# Create a new boot environment when installing patches
CreateBootEnv {{ fp_freebsd_update_createbootenv }}
{% endif %}
